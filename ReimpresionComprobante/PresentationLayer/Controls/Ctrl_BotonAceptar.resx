<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>