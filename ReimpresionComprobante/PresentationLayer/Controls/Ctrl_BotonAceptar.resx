<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>