<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>